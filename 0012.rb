# --------------------------------------------------------------------------- #
# The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first
# ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
#
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred
# divisors?
# --------------------------------------------------------------------------- #

def triangle_number(num)
  num.downto(1).reduce(:+)
end

def divisor_count(num)
  m = Math.sqrt(num)
  2 * 1.upto(m).count { |i| (num % i).zero? } - ((num == m * m) ? 1 : 0)
end

i = 1

while true
  t_num = triangle_number(i)
  divs = divisor_count(t_num)
  break if divs > 500
  i += 1
end

puts triangle_number(i)
