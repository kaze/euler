# --------------------------------------------------------------------------- #
# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.
# --------------------------------------------------------------------------- #

module Fib
  @@mem = {}

  def self.compute(index)
    if index <= 1
      return index
    else
      @@mem[index] ||= compute(index-1) + compute(index-2)
    end
  end
end

def sum_of_fibs(upper_limit)
  upper_limit
  sum = 0
  (0..upper_limit).each do |num|
    fib_num = Fib.compute(num)
    break if fib_num >= upper_limit
    sum += fib_num if fib_num % 2 == 0
  end
  puts sum
end

puts sum_of_fibs(4000000)
